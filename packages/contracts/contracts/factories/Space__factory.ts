/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */
import { Signer, utils, Contract, ContractFactory, Overrides } from "ethers";
import type { Provider, TransactionRequest } from "@ethersproject/providers";
import type { PromiseOrValue } from "../common";
import type { Space, SpaceInterface } from "../Space";

const _abi = [
  {
    inputs: [],
    stateMutability: "nonpayable",
    type: "constructor",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "owner",
        type: "address",
      },
      {
        indexed: true,
        internalType: "address",
        name: "approved",
        type: "address",
      },
      {
        indexed: true,
        internalType: "uint256",
        name: "tokenId",
        type: "uint256",
      },
    ],
    name: "Approval",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "owner",
        type: "address",
      },
      {
        indexed: true,
        internalType: "address",
        name: "operator",
        type: "address",
      },
      {
        indexed: false,
        internalType: "bool",
        name: "approved",
        type: "bool",
      },
    ],
    name: "ApprovalForAll",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "from",
        type: "address",
      },
      {
        indexed: true,
        internalType: "address",
        name: "to",
        type: "address",
      },
      {
        indexed: true,
        internalType: "uint256",
        name: "tokenId",
        type: "uint256",
      },
    ],
    name: "Transfer",
    type: "event",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "to",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "tokenId",
        type: "uint256",
      },
    ],
    name: "approve",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "owner",
        type: "address",
      },
    ],
    name: "balanceOf",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "tokenId",
        type: "uint256",
      },
    ],
    name: "getApproved",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "owner",
        type: "address",
      },
      {
        internalType: "address",
        name: "operator",
        type: "address",
      },
    ],
    name: "isApprovedForAll",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "mint",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "string",
        name: "tokenURI",
        type: "string",
      },
    ],
    name: "mintWithTokenURI",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "name",
    outputs: [
      {
        internalType: "string",
        name: "",
        type: "string",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "tokenId",
        type: "uint256",
      },
    ],
    name: "ownerOf",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "from",
        type: "address",
      },
      {
        internalType: "address",
        name: "to",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "tokenId",
        type: "uint256",
      },
    ],
    name: "safeTransferFrom",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "from",
        type: "address",
      },
      {
        internalType: "address",
        name: "to",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "tokenId",
        type: "uint256",
      },
      {
        internalType: "bytes",
        name: "data",
        type: "bytes",
      },
    ],
    name: "safeTransferFrom",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "operator",
        type: "address",
      },
      {
        internalType: "bool",
        name: "approved",
        type: "bool",
      },
    ],
    name: "setApprovalForAll",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "tokenId",
        type: "uint256",
      },
      {
        internalType: "string",
        name: "tokenURI",
        type: "string",
      },
    ],
    name: "setTokenURI",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "bytes4",
        name: "interfaceId",
        type: "bytes4",
      },
    ],
    name: "supportsInterface",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "symbol",
    outputs: [
      {
        internalType: "string",
        name: "",
        type: "string",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "tokenId",
        type: "uint256",
      },
    ],
    name: "tokenURI",
    outputs: [
      {
        internalType: "string",
        name: "",
        type: "string",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "totalSupply",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "from",
        type: "address",
      },
      {
        internalType: "address",
        name: "to",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "tokenId",
        type: "uint256",
      },
    ],
    name: "transferFrom",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
] as const;

const _bytecode =
  "0x608060405260016007553480156200001657600080fd5b5060405180604001604052806005815260200164537061636560d81b81525060405180604001604052806005815260200164535041434560d81b8152508181816000908162000066919062000125565b50600162000075828262000125565b5050505050620001f1565b634e487b7160e01b600052604160045260246000fd5b600181811c90821680620000ab57607f821691505b602082108103620000cc57634e487b7160e01b600052602260045260246000fd5b50919050565b601f8211156200012057600081815260208120601f850160051c81016020861015620000fb5750805b601f850160051c820191505b818110156200011c5782815560010162000107565b5050505b505050565b81516001600160401b0381111562000141576200014162000080565b620001598162000152845462000096565b84620000d2565b602080601f831160018114620001915760008415620001785750858301515b600019600386901b1c1916600185901b1785556200011c565b600085815260208120601f198616915b82811015620001c257888601518255948401946001909101908401620001a1565b5085821015620001e15787850151600019600388901b60f8161c191681555b5050505050600190811b01905550565b61186080620002016000396000f3fe608060405234801561001057600080fd5b506004361061010b5760003560e01c806342842e0e116100a257806395d89b411161007157806395d89b411461021d578063a22cb46514610225578063b88d4fde14610238578063c87b56dd1461024b578063e985e9c51461025e57600080fd5b806342842e0e146101d15780636352211e146101e457806370a08231146101f757806387371f4d1461020a57600080fd5b80631249c58b116100de5780631249c58b1461018d578063162094c4146101a357806318160ddd146101b657806323b872dd146101be57600080fd5b806301ffc9a71461011057806306fdde0314610138578063081812fc1461014d578063095ea7b314610178575b600080fd5b61012361011e3660046111d7565b610271565b60405190151581526020015b60405180910390f35b6101406102c3565b60405161012f9190611244565b61016061015b366004611257565b610355565b6040516001600160a01b03909116815260200161012f565b61018b61018636600461128c565b61037c565b005b610195610496565b60405190815260200161012f565b61018b6101b1366004611362565b6104ce565b610195610533565b61018b6101cc3660046113a9565b610544565b61018b6101df3660046113a9565b610575565b6101606101f2366004611257565b610590565b6101956102053660046113e5565b6105f0565b610195610218366004611400565b610676565b6101406106b1565b61018b610233366004611435565b6106c0565b61018b610246366004611471565b6106cb565b610140610259366004611257565b610702565b61012361026c3660046114ed565b610812565b60006001600160e01b031982166380ac58cd60e01b14806102a257506001600160e01b03198216635b5e139f60e01b145b806102bd57506301ffc9a760e01b6001600160e01b03198316145b92915050565b6060600080546102d290611520565b80601f01602080910402602001604051908101604052809291908181526020018280546102fe90611520565b801561034b5780601f106103205761010080835404028352916020019161034b565b820191906000526020600020905b81548152906001019060200180831161032e57829003601f168201915b5050505050905090565b600061036082610840565b506000908152600460205260409020546001600160a01b031690565b600061038782610590565b9050806001600160a01b0316836001600160a01b0316036103f95760405162461bcd60e51b815260206004820152602160248201527f4552433732313a20617070726f76616c20746f2063757272656e74206f776e656044820152603960f91b60648201526084015b60405180910390fd5b336001600160a01b038216148061041557506104158133610812565b6104875760405162461bcd60e51b815260206004820152603d60248201527f4552433732313a20617070726f76652063616c6c6572206973206e6f7420746f60448201527f6b656e206f776e6572206f7220617070726f76656420666f7220616c6c00000060648201526084016103f0565b61049183836108a2565b505050565b60006104a5335b600754610910565b600780549060006104b583611570565b919050555060016007546104c99190611589565b905090565b6104d9335b8361092a565b6105255760405162461bcd60e51b815260206004820181905260248201527f43616c6c6572206973206e6f74206f776e6572206e6f7220617070726f76656460448201526064016103f0565b61052f8282610988565b5050565b600060016007546104c99190611589565b61054e338261092a565b61056a5760405162461bcd60e51b81526004016103f09061159c565b610491838383610a1b565b610491838383604051806020016040528060008152506106cb565b6000818152600260205260408120546001600160a01b0316806102bd5760405162461bcd60e51b8152602060048201526018602482015277115490cdcc8c4e881a5b9d985b1a59081d1bdad95b88125160421b60448201526064016103f0565b60006001600160a01b03821661065a5760405162461bcd60e51b815260206004820152602960248201527f4552433732313a2061646472657373207a65726f206973206e6f7420612076616044820152683634b21037bbb732b960b91b60648201526084016103f0565b506001600160a01b031660009081526003602052604090205490565b60006106813361049d565b61068d60075483610988565b6007805490600061069d83611570565b919050555060016007546102bd9190611589565b6060600180546102d290611520565b61052f338383610b8c565b6106d4336104d3565b6106f05760405162461bcd60e51b81526004016103f09061159c565b6106fc84848484610c5a565b50505050565b606061070d82610840565b6000828152600660205260408120805461072690611520565b80601f016020809104026020016040519081016040528092919081815260200182805461075290611520565b801561079f5780601f106107745761010080835404028352916020019161079f565b820191906000526020600020905b81548152906001019060200180831161078257829003601f168201915b5050505050905060006107bd60408051602081019091526000815290565b905080516000036107cf575092915050565b8151156108015780826040516020016107e99291906115e9565b60405160208183030381529060405292505050919050565b61080a84610c8d565b949350505050565b6001600160a01b03918216600090815260056020908152604080832093909416825291909152205460ff1690565b6000818152600260205260409020546001600160a01b031661089f5760405162461bcd60e51b8152602060048201526018602482015277115490cdcc8c4e881a5b9d985b1a59081d1bdad95b88125160421b60448201526064016103f0565b50565b600081815260046020526040902080546001600160a01b0319166001600160a01b03841690811790915581906108d782610590565b6001600160a01b03167f8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b92560405160405180910390a45050565b61052f828260405180602001604052806000815250610d01565b60008061093683610590565b9050806001600160a01b0316846001600160a01b0316148061095d575061095d8185610812565b8061080a5750836001600160a01b031661097684610355565b6001600160a01b031614949350505050565b6000828152600260205260409020546001600160a01b0316610a035760405162461bcd60e51b815260206004820152602e60248201527f45524337323155524953746f726167653a2055524920736574206f66206e6f6e60448201526d32bc34b9ba32b73a103a37b5b2b760911b60648201526084016103f0565b60008281526006602052604090206104918282611666565b826001600160a01b0316610a2e82610590565b6001600160a01b031614610a545760405162461bcd60e51b81526004016103f090611726565b6001600160a01b038216610ab65760405162461bcd60e51b8152602060048201526024808201527f4552433732313a207472616e7366657220746f20746865207a65726f206164646044820152637265737360e01b60648201526084016103f0565b610ac38383836001610d34565b826001600160a01b0316610ad682610590565b6001600160a01b031614610afc5760405162461bcd60e51b81526004016103f090611726565b600081815260046020908152604080832080546001600160a01b03199081169091556001600160a01b0387811680865260038552838620805460001901905590871680865283862080546001019055868652600290945282852080549092168417909155905184937fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef91a4505050565b816001600160a01b0316836001600160a01b031603610bed5760405162461bcd60e51b815260206004820152601960248201527f4552433732313a20617070726f766520746f2063616c6c65720000000000000060448201526064016103f0565b6001600160a01b03838116600081815260056020908152604080832094871680845294825291829020805460ff191686151590811790915591519182527f17307eab39ab6107e8899845ad3d59bd9653f200f220920489ca2b5937696c31910160405180910390a3505050565b610c65848484610a1b565b610c7184848484610dbc565b6106fc5760405162461bcd60e51b81526004016103f09061176b565b6060610c9882610840565b6000610caf60408051602081019091526000815290565b90506000815111610ccf5760405180602001604052806000815250610cfa565b80610cd984610ebd565b604051602001610cea9291906115e9565b6040516020818303038152906040525b9392505050565b610d0b8383610f50565b610d186000848484610dbc565b6104915760405162461bcd60e51b81526004016103f09061176b565b60018111156106fc576001600160a01b03841615610d7a576001600160a01b03841660009081526003602052604081208054839290610d74908490611589565b90915550505b6001600160a01b038316156106fc576001600160a01b03831660009081526003602052604081208054839290610db19084906117bd565b909155505050505050565b60006001600160a01b0384163b15610eb257604051630a85bd0160e11b81526001600160a01b0385169063150b7a0290610e009033908990889088906004016117d0565b6020604051808303816000875af1925050508015610e3b575060408051601f3d908101601f19168201909252610e389181019061180d565b60015b610e98573d808015610e69576040519150601f19603f3d011682016040523d82523d6000602084013e610e6e565b606091505b508051600003610e905760405162461bcd60e51b81526004016103f09061176b565b805181602001fd5b6001600160e01b031916630a85bd0160e11b14905061080a565b506001949350505050565b60606000610eca836110e9565b600101905060008167ffffffffffffffff811115610eea57610eea6112b6565b6040519080825280601f01601f191660200182016040528015610f14576020820181803683370190505b5090508181016020015b600019016f181899199a1a9b1b9c1cb0b131b232b360811b600a86061a8153600a8504945084610f1e57509392505050565b6001600160a01b038216610fa65760405162461bcd60e51b815260206004820181905260248201527f4552433732313a206d696e7420746f20746865207a65726f206164647265737360448201526064016103f0565b6000818152600260205260409020546001600160a01b03161561100b5760405162461bcd60e51b815260206004820152601c60248201527f4552433732313a20746f6b656e20616c7265616479206d696e7465640000000060448201526064016103f0565b611019600083836001610d34565b6000818152600260205260409020546001600160a01b03161561107e5760405162461bcd60e51b815260206004820152601c60248201527f4552433732313a20746f6b656e20616c7265616479206d696e7465640000000060448201526064016103f0565b6001600160a01b038216600081815260036020908152604080832080546001019055848352600290915280822080546001600160a01b0319168417905551839291907fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef908290a45050565b60008072184f03e93ff9f4daa797ed6e38ed64bf6a1f0160401b83106111285772184f03e93ff9f4daa797ed6e38ed64bf6a1f0160401b830492506040015b6d04ee2d6d415b85acef81000000008310611154576d04ee2d6d415b85acef8100000000830492506020015b662386f26fc10000831061117257662386f26fc10000830492506010015b6305f5e100831061118a576305f5e100830492506008015b612710831061119e57612710830492506004015b606483106111b0576064830492506002015b600a83106102bd5760010192915050565b6001600160e01b03198116811461089f57600080fd5b6000602082840312156111e957600080fd5b8135610cfa816111c1565b60005b8381101561120f5781810151838201526020016111f7565b50506000910152565b600081518084526112308160208601602086016111f4565b601f01601f19169290920160200192915050565b602081526000610cfa6020830184611218565b60006020828403121561126957600080fd5b5035919050565b80356001600160a01b038116811461128757600080fd5b919050565b6000806040838503121561129f57600080fd5b6112a883611270565b946020939093013593505050565b634e487b7160e01b600052604160045260246000fd5b600067ffffffffffffffff808411156112e7576112e76112b6565b604051601f8501601f19908116603f0116810190828211818310171561130f5761130f6112b6565b8160405280935085815286868601111561132857600080fd5b858560208301376000602087830101525050509392505050565b600082601f83011261135357600080fd5b610cfa838335602085016112cc565b6000806040838503121561137557600080fd5b82359150602083013567ffffffffffffffff81111561139357600080fd5b61139f85828601611342565b9150509250929050565b6000806000606084860312156113be57600080fd5b6113c784611270565b92506113d560208501611270565b9150604084013590509250925092565b6000602082840312156113f757600080fd5b610cfa82611270565b60006020828403121561141257600080fd5b813567ffffffffffffffff81111561142957600080fd5b61080a84828501611342565b6000806040838503121561144857600080fd5b61145183611270565b91506020830135801515811461146657600080fd5b809150509250929050565b6000806000806080858703121561148757600080fd5b61149085611270565b935061149e60208601611270565b925060408501359150606085013567ffffffffffffffff8111156114c157600080fd5b8501601f810187136114d257600080fd5b6114e1878235602084016112cc565b91505092959194509250565b6000806040838503121561150057600080fd5b61150983611270565b915061151760208401611270565b90509250929050565b600181811c9082168061153457607f821691505b60208210810361155457634e487b7160e01b600052602260045260246000fd5b50919050565b634e487b7160e01b600052601160045260246000fd5b6000600182016115825761158261155a565b5060010190565b818103818111156102bd576102bd61155a565b6020808252602d908201527f4552433732313a2063616c6c6572206973206e6f7420746f6b656e206f776e6560408201526c1c881bdc88185c1c1c9bdd9959609a1b606082015260800190565b600083516115fb8184602088016111f4565b83519083019061160f8183602088016111f4565b01949350505050565b601f82111561049157600081815260208120601f850160051c8101602086101561163f5750805b601f850160051c820191505b8181101561165e5782815560010161164b565b505050505050565b815167ffffffffffffffff811115611680576116806112b6565b6116948161168e8454611520565b84611618565b602080601f8311600181146116c957600084156116b15750858301515b600019600386901b1c1916600185901b17855561165e565b600085815260208120601f198616915b828110156116f8578886015182559484019460019091019084016116d9565b50858210156117165787850151600019600388901b60f8161c191681555b5050505050600190811b01905550565b60208082526025908201527f4552433732313a207472616e736665722066726f6d20696e636f72726563742060408201526437bbb732b960d91b606082015260800190565b60208082526032908201527f4552433732313a207472616e7366657220746f206e6f6e20455243373231526560408201527131b2b4bb32b91034b6b83632b6b2b73a32b960711b606082015260800190565b808201808211156102bd576102bd61155a565b6001600160a01b038581168252841660208201526040810183905260806060820181905260009061180390830184611218565b9695505050505050565b60006020828403121561181f57600080fd5b8151610cfa816111c156fea264697066735822122014718b11b7a0246fd01784c2d0d5b1a07e326fefd52b7b64ab10cc5d5b19c83564736f6c63430008110033";

type SpaceConstructorParams =
  | [signer?: Signer]
  | ConstructorParameters<typeof ContractFactory>;

const isSuperArgs = (
  xs: SpaceConstructorParams
): xs is ConstructorParameters<typeof ContractFactory> => xs.length > 1;

export class Space__factory extends ContractFactory {
  constructor(...args: SpaceConstructorParams) {
    if (isSuperArgs(args)) {
      super(...args);
    } else {
      super(_abi, _bytecode, args[0]);
    }
  }

  override deploy(
    overrides?: Overrides & { from?: PromiseOrValue<string> }
  ): Promise<Space> {
    return super.deploy(overrides || {}) as Promise<Space>;
  }
  override getDeployTransaction(
    overrides?: Overrides & { from?: PromiseOrValue<string> }
  ): TransactionRequest {
    return super.getDeployTransaction(overrides || {});
  }
  override attach(address: string): Space {
    return super.attach(address) as Space;
  }
  override connect(signer: Signer): Space__factory {
    return super.connect(signer) as Space__factory;
  }

  static readonly bytecode = _bytecode;
  static readonly abi = _abi;
  static createInterface(): SpaceInterface {
    return new utils.Interface(_abi) as SpaceInterface;
  }
  static connect(address: string, signerOrProvider: Signer | Provider): Space {
    return new Contract(address, _abi, signerOrProvider) as Space;
  }
}
