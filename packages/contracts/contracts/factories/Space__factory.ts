/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */
import { Signer, utils, Contract, ContractFactory, Overrides } from "ethers";
import type { Provider, TransactionRequest } from "@ethersproject/providers";
import type { PromiseOrValue } from "../common";
import type { Space, SpaceInterface } from "../Space";

const _abi = [
  {
    inputs: [],
    stateMutability: "nonpayable",
    type: "constructor",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "owner",
        type: "address",
      },
      {
        indexed: true,
        internalType: "address",
        name: "approved",
        type: "address",
      },
      {
        indexed: true,
        internalType: "uint256",
        name: "tokenId",
        type: "uint256",
      },
    ],
    name: "Approval",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "owner",
        type: "address",
      },
      {
        indexed: true,
        internalType: "address",
        name: "operator",
        type: "address",
      },
      {
        indexed: false,
        internalType: "bool",
        name: "approved",
        type: "bool",
      },
    ],
    name: "ApprovalForAll",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "from",
        type: "address",
      },
      {
        indexed: true,
        internalType: "address",
        name: "to",
        type: "address",
      },
      {
        indexed: true,
        internalType: "uint256",
        name: "tokenId",
        type: "uint256",
      },
    ],
    name: "Transfer",
    type: "event",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "to",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "tokenId",
        type: "uint256",
      },
    ],
    name: "approve",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "owner",
        type: "address",
      },
    ],
    name: "balanceOf",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "tokenId",
        type: "uint256",
      },
    ],
    name: "burn",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "count",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "tokenId",
        type: "uint256",
      },
    ],
    name: "getApproved",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "owner",
        type: "address",
      },
      {
        internalType: "address",
        name: "operator",
        type: "address",
      },
    ],
    name: "isApprovedForAll",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "mint",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "string",
        name: "tokenURI",
        type: "string",
      },
    ],
    name: "mintWithTokenURI",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "name",
    outputs: [
      {
        internalType: "string",
        name: "",
        type: "string",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "tokenId",
        type: "uint256",
      },
    ],
    name: "ownerOf",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "from",
        type: "address",
      },
      {
        internalType: "address",
        name: "to",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "tokenId",
        type: "uint256",
      },
    ],
    name: "safeTransferFrom",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "from",
        type: "address",
      },
      {
        internalType: "address",
        name: "to",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "tokenId",
        type: "uint256",
      },
      {
        internalType: "bytes",
        name: "data",
        type: "bytes",
      },
    ],
    name: "safeTransferFrom",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "operator",
        type: "address",
      },
      {
        internalType: "bool",
        name: "approved",
        type: "bool",
      },
    ],
    name: "setApprovalForAll",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "tokenId",
        type: "uint256",
      },
      {
        internalType: "string",
        name: "tokenURI",
        type: "string",
      },
    ],
    name: "setTokenURI",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "bytes4",
        name: "interfaceId",
        type: "bytes4",
      },
    ],
    name: "supportsInterface",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "symbol",
    outputs: [
      {
        internalType: "string",
        name: "",
        type: "string",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "tokenId",
        type: "uint256",
      },
    ],
    name: "tokenURI",
    outputs: [
      {
        internalType: "string",
        name: "",
        type: "string",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "from",
        type: "address",
      },
      {
        internalType: "address",
        name: "to",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "tokenId",
        type: "uint256",
      },
    ],
    name: "transferFrom",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
] as const;

const _bytecode =
  "0x608060405260006007553480156200001657600080fd5b5060405180604001604052806005815260200164537061636560d81b81525060405180604001604052806005815260200164535041434560d81b8152508181816000908162000066919062000125565b50600162000075828262000125565b5050505050620001f1565b634e487b7160e01b600052604160045260246000fd5b600181811c90821680620000ab57607f821691505b602082108103620000cc57634e487b7160e01b600052602260045260246000fd5b50919050565b601f8211156200012057600081815260208120601f850160051c81016020861015620000fb5750805b601f850160051c820191505b818110156200011c5782815560010162000107565b5050505b505050565b81516001600160401b0381111562000141576200014162000080565b620001598162000152845462000096565b84620000d2565b602080601f831160018114620001915760008415620001785750858301515b600019600386901b1c1916600185901b1785556200011c565b600085815260208120601f198616915b82811015620001c257888601518255948401946001909101908401620001a1565b5085821015620001e15787850151600019600388901b60f8161c191681555b5050505050600190811b01905550565b6119ff80620002016000396000f3fe608060405234801561001057600080fd5b50600436106101165760003560e01c806342966c68116100a257806395d89b411161007157806395d89b411461023c578063a22cb46514610244578063b88d4fde14610257578063c87b56dd1461026a578063e985e9c51461027d57600080fd5b806342966c68146101f05780636352211e1461020357806370a082311461021657806387371f4d1461022957600080fd5b8063095ea7b3116100e9578063095ea7b31461019a5780631249c58b146101af578063162094c4146101b757806323b872dd146101ca57806342842e0e146101dd57600080fd5b806301ffc9a71461011b57806306661abd1461014357806306fdde031461015a578063081812fc1461016f575b600080fd5b61012e610129366004611376565b610290565b60405190151581526020015b60405180910390f35b61014c60075481565b60405190815260200161013a565b6101626102e2565b60405161013a91906113e3565b61018261017d3660046113f6565b610374565b6040516001600160a01b03909116815260200161013a565b6101ad6101a836600461142b565b61039b565b005b61014c6104b5565b6101ad6101c5366004611501565b6104eb565b6101ad6101d8366004611548565b610550565b6101ad6101eb366004611548565b610582565b6101ad6101fe3660046113f6565b61059d565b6101826102113660046113f6565b6105fe565b61014c610224366004611584565b61065e565b61014c61023736600461159f565b6106e4565b610162610722565b6101ad6102523660046115d4565b610731565b6101ad610265366004611610565b61073c565b6101626102783660046113f6565b610773565b61012e61028b36600461168c565b610883565b60006001600160e01b031982166380ac58cd60e01b14806102c157506001600160e01b03198216635b5e139f60e01b145b806102dc57506301ffc9a760e01b6001600160e01b03198316145b92915050565b6060600080546102f1906116bf565b80601f016020809104026020016040519081016040528092919081815260200182805461031d906116bf565b801561036a5780601f1061033f5761010080835404028352916020019161036a565b820191906000526020600020905b81548152906001019060200180831161034d57829003601f168201915b5050505050905090565b600061037f826108b1565b506000908152600460205260409020546001600160a01b031690565b60006103a6826105fe565b9050806001600160a01b0316836001600160a01b0316036104185760405162461bcd60e51b815260206004820152602160248201527f4552433732313a20617070726f76616c20746f2063757272656e74206f776e656044820152603960f91b60648201526084015b60405180910390fd5b336001600160a01b038216148061043457506104348133610883565b6104a65760405162461bcd60e51b815260206004820152603d60248201527f4552433732313a20617070726f76652063616c6c6572206973206e6f7420746f60448201527f6b656e206f776e6572206f7220617070726f76656420666f7220616c6c000000606482015260840161040f565b6104b08383610910565b505050565b60006104ce336007546104c990600161170f565b61097e565b600780549060006104de83611722565b9190505550600754905090565b6104f6335b83610998565b6105425760405162461bcd60e51b815260206004820181905260248201527f43616c6c6572206973206e6f74206f776e6572206e6f7220617070726f766564604482015260640161040f565b61054c82826109f6565b5050565b61055b335b82610998565b6105775760405162461bcd60e51b815260040161040f9061173b565b6104b0838383610a89565b6104b08383836040518060200160405280600081525061073c565b6105a633610555565b6105f25760405162461bcd60e51b815260206004820181905260248201527f43616c6c6572206973206e6f74206f776e6572206e6f7220617070726f766564604482015260640161040f565b6105fb81610bfa565b50565b6000818152600260205260408120546001600160a01b0316806102dc5760405162461bcd60e51b8152602060048201526018602482015277115490cdcc8c4e881a5b9d985b1a59081d1bdad95b88125160421b604482015260640161040f565b60006001600160a01b0382166106c85760405162461bcd60e51b815260206004820152602960248201527f4552433732313a2061646472657373207a65726f206973206e6f7420612076616044820152683634b21037bbb732b960b91b606482015260840161040f565b506001600160a01b031660009081526003602052604090205490565b60006106f23360075461097e565b6106fe600754836109f6565b6007805490600061070e83611722565b919050555060016007546102dc9190611788565b6060600180546102f1906116bf565b61054c338383610c3a565b610745336104f0565b6107615760405162461bcd60e51b815260040161040f9061173b565b61076d84848484610d08565b50505050565b606061077e826108b1565b60008281526006602052604081208054610797906116bf565b80601f01602080910402602001604051908101604052809291908181526020018280546107c3906116bf565b80156108105780601f106107e557610100808354040283529160200191610810565b820191906000526020600020905b8154815290600101906020018083116107f357829003601f168201915b50505050509050600061082e60408051602081019091526000815290565b90508051600003610840575092915050565b81511561087257808260405160200161085a92919061179b565b60405160208183030381529060405292505050919050565b61087b84610d3b565b949350505050565b6001600160a01b03918216600090815260056020908152604080832093909416825291909152205460ff1690565b6000818152600260205260409020546001600160a01b03166105fb5760405162461bcd60e51b8152602060048201526018602482015277115490cdcc8c4e881a5b9d985b1a59081d1bdad95b88125160421b604482015260640161040f565b600081815260046020526040902080546001600160a01b0319166001600160a01b0384169081179091558190610945826105fe565b6001600160a01b03167f8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b92560405160405180910390a45050565b61054c828260405180602001604052806000815250610daf565b6000806109a4836105fe565b9050806001600160a01b0316846001600160a01b031614806109cb57506109cb8185610883565b8061087b5750836001600160a01b03166109e484610374565b6001600160a01b031614949350505050565b6000828152600260205260409020546001600160a01b0316610a715760405162461bcd60e51b815260206004820152602e60248201527f45524337323155524953746f726167653a2055524920736574206f66206e6f6e60448201526d32bc34b9ba32b73a103a37b5b2b760911b606482015260840161040f565b60008281526006602052604090206104b08282611818565b826001600160a01b0316610a9c826105fe565b6001600160a01b031614610ac25760405162461bcd60e51b815260040161040f906118d8565b6001600160a01b038216610b245760405162461bcd60e51b8152602060048201526024808201527f4552433732313a207472616e7366657220746f20746865207a65726f206164646044820152637265737360e01b606482015260840161040f565b610b318383836001610de2565b826001600160a01b0316610b44826105fe565b6001600160a01b031614610b6a5760405162461bcd60e51b815260040161040f906118d8565b600081815260046020908152604080832080546001600160a01b03199081169091556001600160a01b0387811680865260038552838620805460001901905590871680865283862080546001019055868652600290945282852080549092168417909155905184937fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef91a4505050565b610c0381610e6a565b60008181526006602052604090208054610c1c906116bf565b1590506105fb5760008181526006602052604081206105fb91611312565b816001600160a01b0316836001600160a01b031603610c9b5760405162461bcd60e51b815260206004820152601960248201527f4552433732313a20617070726f766520746f2063616c6c657200000000000000604482015260640161040f565b6001600160a01b03838116600081815260056020908152604080832094871680845294825291829020805460ff191686151590811790915591519182527f17307eab39ab6107e8899845ad3d59bd9653f200f220920489ca2b5937696c31910160405180910390a3505050565b610d13848484610a89565b610d1f84848484610f0d565b61076d5760405162461bcd60e51b815260040161040f9061191d565b6060610d46826108b1565b6000610d5d60408051602081019091526000815290565b90506000815111610d7d5760405180602001604052806000815250610da8565b80610d878461100e565b604051602001610d9892919061179b565b6040516020818303038152906040525b9392505050565b610db983836110a1565b610dc66000848484610f0d565b6104b05760405162461bcd60e51b815260040161040f9061191d565b600181111561076d576001600160a01b03841615610e28576001600160a01b03841660009081526003602052604081208054839290610e22908490611788565b90915550505b6001600160a01b0383161561076d576001600160a01b03831660009081526003602052604081208054839290610e5f90849061170f565b909155505050505050565b6000610e75826105fe565b9050610e85816000846001610de2565b610e8e826105fe565b600083815260046020908152604080832080546001600160a01b03199081169091556001600160a01b0385168085526003845282852080546000190190558785526002909352818420805490911690555192935084927fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef908390a45050565b60006001600160a01b0384163b1561100357604051630a85bd0160e11b81526001600160a01b0385169063150b7a0290610f5190339089908890889060040161196f565b6020604051808303816000875af1925050508015610f8c575060408051601f3d908101601f19168201909252610f89918101906119ac565b60015b610fe9573d808015610fba576040519150601f19603f3d011682016040523d82523d6000602084013e610fbf565b606091505b508051600003610fe15760405162461bcd60e51b815260040161040f9061191d565b805181602001fd5b6001600160e01b031916630a85bd0160e11b14905061087b565b506001949350505050565b6060600061101b8361123a565b600101905060008167ffffffffffffffff81111561103b5761103b611455565b6040519080825280601f01601f191660200182016040528015611065576020820181803683370190505b5090508181016020015b600019016f181899199a1a9b1b9c1cb0b131b232b360811b600a86061a8153600a850494508461106f57509392505050565b6001600160a01b0382166110f75760405162461bcd60e51b815260206004820181905260248201527f4552433732313a206d696e7420746f20746865207a65726f2061646472657373604482015260640161040f565b6000818152600260205260409020546001600160a01b03161561115c5760405162461bcd60e51b815260206004820152601c60248201527f4552433732313a20746f6b656e20616c7265616479206d696e74656400000000604482015260640161040f565b61116a600083836001610de2565b6000818152600260205260409020546001600160a01b0316156111cf5760405162461bcd60e51b815260206004820152601c60248201527f4552433732313a20746f6b656e20616c7265616479206d696e74656400000000604482015260640161040f565b6001600160a01b038216600081815260036020908152604080832080546001019055848352600290915280822080546001600160a01b0319168417905551839291907fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef908290a45050565b60008072184f03e93ff9f4daa797ed6e38ed64bf6a1f0160401b83106112795772184f03e93ff9f4daa797ed6e38ed64bf6a1f0160401b830492506040015b6d04ee2d6d415b85acef810000000083106112a5576d04ee2d6d415b85acef8100000000830492506020015b662386f26fc1000083106112c357662386f26fc10000830492506010015b6305f5e10083106112db576305f5e100830492506008015b61271083106112ef57612710830492506004015b60648310611301576064830492506002015b600a83106102dc5760010192915050565b50805461131e906116bf565b6000825580601f1061132e575050565b601f0160209004906000526020600020908101906105fb91905b8082111561135c5760008155600101611348565b5090565b6001600160e01b0319811681146105fb57600080fd5b60006020828403121561138857600080fd5b8135610da881611360565b60005b838110156113ae578181015183820152602001611396565b50506000910152565b600081518084526113cf816020860160208601611393565b601f01601f19169290920160200192915050565b602081526000610da860208301846113b7565b60006020828403121561140857600080fd5b5035919050565b80356001600160a01b038116811461142657600080fd5b919050565b6000806040838503121561143e57600080fd5b6114478361140f565b946020939093013593505050565b634e487b7160e01b600052604160045260246000fd5b600067ffffffffffffffff8084111561148657611486611455565b604051601f8501601f19908116603f011681019082821181831017156114ae576114ae611455565b816040528093508581528686860111156114c757600080fd5b858560208301376000602087830101525050509392505050565b600082601f8301126114f257600080fd5b610da88383356020850161146b565b6000806040838503121561151457600080fd5b82359150602083013567ffffffffffffffff81111561153257600080fd5b61153e858286016114e1565b9150509250929050565b60008060006060848603121561155d57600080fd5b6115668461140f565b92506115746020850161140f565b9150604084013590509250925092565b60006020828403121561159657600080fd5b610da88261140f565b6000602082840312156115b157600080fd5b813567ffffffffffffffff8111156115c857600080fd5b61087b848285016114e1565b600080604083850312156115e757600080fd5b6115f08361140f565b91506020830135801515811461160557600080fd5b809150509250929050565b6000806000806080858703121561162657600080fd5b61162f8561140f565b935061163d6020860161140f565b925060408501359150606085013567ffffffffffffffff81111561166057600080fd5b8501601f8101871361167157600080fd5b6116808782356020840161146b565b91505092959194509250565b6000806040838503121561169f57600080fd5b6116a88361140f565b91506116b66020840161140f565b90509250929050565b600181811c908216806116d357607f821691505b6020821081036116f357634e487b7160e01b600052602260045260246000fd5b50919050565b634e487b7160e01b600052601160045260246000fd5b808201808211156102dc576102dc6116f9565b600060018201611734576117346116f9565b5060010190565b6020808252602d908201527f4552433732313a2063616c6c6572206973206e6f7420746f6b656e206f776e6560408201526c1c881bdc88185c1c1c9bdd9959609a1b606082015260800190565b818103818111156102dc576102dc6116f9565b600083516117ad818460208801611393565b8351908301906117c1818360208801611393565b01949350505050565b601f8211156104b057600081815260208120601f850160051c810160208610156117f15750805b601f850160051c820191505b81811015611810578281556001016117fd565b505050505050565b815167ffffffffffffffff81111561183257611832611455565b6118468161184084546116bf565b846117ca565b602080601f83116001811461187b57600084156118635750858301515b600019600386901b1c1916600185901b178555611810565b600085815260208120601f198616915b828110156118aa5788860151825594840194600190910190840161188b565b50858210156118c85787850151600019600388901b60f8161c191681555b5050505050600190811b01905550565b60208082526025908201527f4552433732313a207472616e736665722066726f6d20696e636f72726563742060408201526437bbb732b960d91b606082015260800190565b60208082526032908201527f4552433732313a207472616e7366657220746f206e6f6e20455243373231526560408201527131b2b4bb32b91034b6b83632b6b2b73a32b960711b606082015260800190565b6001600160a01b03858116825284166020820152604081018390526080606082018190526000906119a2908301846113b7565b9695505050505050565b6000602082840312156119be57600080fd5b8151610da88161136056fea264697066735822122052d39518d3eea7ba031d22f1a8f862a368520d584620f4a99e80f7ac247fd85d64736f6c63430008110033";

type SpaceConstructorParams =
  | [signer?: Signer]
  | ConstructorParameters<typeof ContractFactory>;

const isSuperArgs = (
  xs: SpaceConstructorParams
): xs is ConstructorParameters<typeof ContractFactory> => xs.length > 1;

export class Space__factory extends ContractFactory {
  constructor(...args: SpaceConstructorParams) {
    if (isSuperArgs(args)) {
      super(...args);
    } else {
      super(_abi, _bytecode, args[0]);
    }
  }

  override deploy(
    overrides?: Overrides & { from?: PromiseOrValue<string> }
  ): Promise<Space> {
    return super.deploy(overrides || {}) as Promise<Space>;
  }
  override getDeployTransaction(
    overrides?: Overrides & { from?: PromiseOrValue<string> }
  ): TransactionRequest {
    return super.getDeployTransaction(overrides || {});
  }
  override attach(address: string): Space {
    return super.attach(address) as Space;
  }
  override connect(signer: Signer): Space__factory {
    return super.connect(signer) as Space__factory;
  }

  static readonly bytecode = _bytecode;
  static readonly abi = _abi;
  static createInterface(): SpaceInterface {
    return new utils.Interface(_abi) as SpaceInterface;
  }
  static connect(address: string, signerOrProvider: Signer | Provider): Space {
    return new Contract(address, _abi, signerOrProvider) as Space;
  }
}
