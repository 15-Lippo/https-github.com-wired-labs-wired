/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */
import { Signer, utils, Contract, ContractFactory, Overrides } from "ethers";
import type { Provider, TransactionRequest } from "@ethersproject/providers";
import type { PromiseOrValue } from "../common";
import type { Profile, ProfileInterface } from "../Profile";

const _abi = [
  {
    inputs: [],
    stateMutability: "nonpayable",
    type: "constructor",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "owner",
        type: "address",
      },
      {
        indexed: true,
        internalType: "address",
        name: "approved",
        type: "address",
      },
      {
        indexed: true,
        internalType: "uint256",
        name: "tokenId",
        type: "uint256",
      },
    ],
    name: "Approval",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "owner",
        type: "address",
      },
      {
        indexed: true,
        internalType: "address",
        name: "operator",
        type: "address",
      },
      {
        indexed: false,
        internalType: "bool",
        name: "approved",
        type: "bool",
      },
    ],
    name: "ApprovalForAll",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "from",
        type: "address",
      },
      {
        indexed: true,
        internalType: "address",
        name: "to",
        type: "address",
      },
      {
        indexed: true,
        internalType: "uint256",
        name: "tokenId",
        type: "uint256",
      },
    ],
    name: "Transfer",
    type: "event",
  },
  {
    inputs: [],
    name: "MAX_HANDLE_LENGTH",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "to",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "tokenId",
        type: "uint256",
      },
    ],
    name: "approve",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "owner",
        type: "address",
      },
    ],
    name: "balanceOf",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "tokenId",
        type: "uint256",
      },
    ],
    name: "getApproved",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "owner",
        type: "address",
      },
    ],
    name: "getDefaultProfile",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "tokenId",
        type: "uint256",
      },
    ],
    name: "getHandle",
    outputs: [
      {
        internalType: "string",
        name: "",
        type: "string",
      },
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "string",
        name: "handle",
        type: "string",
      },
      {
        internalType: "uint256",
        name: "handleId",
        type: "uint256",
      },
    ],
    name: "getProfileFromHandle",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "owner",
        type: "address",
      },
      {
        internalType: "address",
        name: "operator",
        type: "address",
      },
    ],
    name: "isApprovedForAll",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "mint",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "string",
        name: "handle",
        type: "string",
      },
    ],
    name: "mintWithHandle",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "name",
    outputs: [
      {
        internalType: "string",
        name: "",
        type: "string",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "tokenId",
        type: "uint256",
      },
    ],
    name: "ownerOf",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "from",
        type: "address",
      },
      {
        internalType: "address",
        name: "to",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "tokenId",
        type: "uint256",
      },
    ],
    name: "safeTransferFrom",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "from",
        type: "address",
      },
      {
        internalType: "address",
        name: "to",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "tokenId",
        type: "uint256",
      },
      {
        internalType: "bytes",
        name: "data",
        type: "bytes",
      },
    ],
    name: "safeTransferFrom",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "operator",
        type: "address",
      },
      {
        internalType: "bool",
        name: "approved",
        type: "bool",
      },
    ],
    name: "setApprovalForAll",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "tokenId",
        type: "uint256",
      },
    ],
    name: "setDefaultProfile",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "tokenId",
        type: "uint256",
      },
      {
        internalType: "string",
        name: "newHandle",
        type: "string",
      },
    ],
    name: "setHandle",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "tokenId",
        type: "uint256",
      },
      {
        internalType: "string",
        name: "tokenURI",
        type: "string",
      },
    ],
    name: "setTokenURI",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "bytes4",
        name: "interfaceId",
        type: "bytes4",
      },
    ],
    name: "supportsInterface",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "symbol",
    outputs: [
      {
        internalType: "string",
        name: "",
        type: "string",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "tokenId",
        type: "uint256",
      },
    ],
    name: "tokenURI",
    outputs: [
      {
        internalType: "string",
        name: "",
        type: "string",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "totalSupply",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "from",
        type: "address",
      },
      {
        internalType: "address",
        name: "to",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "tokenId",
        type: "uint256",
      },
    ],
    name: "transferFrom",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
] as const;

const _bytecode =
  "0x608060405260016007553480156200001657600080fd5b506040518060400160405280600781526020016650726f66696c6560c81b8152506040518060400160405280600781526020016650524f46494c4560c81b815250818181600090816200006a919062000129565b50600162000079828262000129565b5050505050620001f5565b634e487b7160e01b600052604160045260246000fd5b600181811c90821680620000af57607f821691505b602082108103620000d057634e487b7160e01b600052602260045260246000fd5b50919050565b601f8211156200012457600081815260208120601f850160051c81016020861015620000ff5750805b601f850160051c820191505b8181101562000120578281556001016200010b565b5050505b505050565b81516001600160401b0381111562000145576200014562000084565b6200015d816200015684546200009a565b84620000d6565b602080601f8311600181146200019557600084156200017c5750858301515b600019600386901b1c1916600185901b17855562000120565b600085815260208120601f198616915b82811015620001c657888601518255948401946001909101908401620001a5565b5085821015620001e55787850151600019600388901b60f8161c191681555b5050505050600190811b01905550565b611db380620002056000396000f3fe608060405234801561001057600080fd5b506004361061014d5760003560e01c80636352211e116100c3578063b88d4fde1161007c578063b88d4fde146102bd578063c87b56dd146102d0578063e985e9c5146102e3578063ec81d1941461031f578063ed535d9d14610340578063f1b2f8bc1461036957600080fd5b80636352211e146102615780636f78ce0b1461027457806370a082311461027c57806395d89b411461028f578063a22cb46514610297578063a6e6178d146102aa57600080fd5b8063162094c411610115578063162094c4146101e557806318160ddd146101f857806323b872dd14610200578063335b16031461021357806342842e0e1461022657806361819b251461023957600080fd5b806301ffc9a71461015257806306fdde031461017a578063081812fc1461018f578063095ea7b3146101ba5780631249c58b146101cf575b600080fd5b6101656101603660046115e8565b61037c565b60405190151581526020015b60405180910390f35b6101826103ce565b6040516101719190611655565b6101a261019d366004611668565b610460565b6040516001600160a01b039091168152602001610171565b6101cd6101c836600461169d565b610487565b005b6101d76105a1565b604051908152602001610171565b6101cd6101f3366004611773565b6105d8565b6101d761063d565b6101cd61020e3660046117ba565b61064e565b6101d76102213660046117f6565b610680565b6101cd6102343660046117ba565b61073f565b61024c61024736600461183b565b61075a565b60408051928352602083019190915201610171565b6101a261026f366004611668565b6107aa565b6101d7601081565b6101d761028a366004611870565b61080a565b610182610890565b6101cd6102a536600461188b565b61089f565b6101d76102b8366004611773565b6108aa565b6101cd6102cb3660046118c7565b6109fe565b6101826102de366004611668565b610a35565b6101656102f1366004611943565b6001600160a01b03918216600090815260056020908152604080832093909416825291909152205460ff1690565b61033261032d366004611668565b610b45565b604051610171929190611976565b6101d761034e366004611870565b6001600160a01b03166000908152600b602052604090205490565b6101cd610377366004611668565b610bfa565b60006001600160e01b031982166380ac58cd60e01b14806103ad57506001600160e01b03198216635b5e139f60e01b145b806103c857506301ffc9a760e01b6001600160e01b03198316145b92915050565b6060600080546103dd90611998565b80601f016020809104026020016040519081016040528092919081815260200182805461040990611998565b80156104565780601f1061042b57610100808354040283529160200191610456565b820191906000526020600020905b81548152906001019060200180831161043957829003601f168201915b5050505050905090565b600061046b82610c31565b506000908152600460205260409020546001600160a01b031690565b6000610492826107aa565b9050806001600160a01b0316836001600160a01b0316036105045760405162461bcd60e51b815260206004820152602160248201527f4552433732313a20617070726f76616c20746f2063757272656e74206f776e656044820152603960f91b60648201526084015b60405180910390fd5b336001600160a01b0382161480610520575061052081336102f1565b6105925760405162461bcd60e51b815260206004820152603d60248201527f4552433732313a20617070726f76652063616c6c6572206973206e6f7420746f60448201527f6b656e206f776e6572206f7220617070726f76656420666f7220616c6c00000060648201526084016104fb565b61059c8383610c93565b505050565b60006105af33600754610d01565b600780549060006105bf836119e8565b919050555060016007546105d39190611a01565b905090565b6105e3335b83610d1b565b61062f5760405162461bcd60e51b815260206004820181905260248201527f43616c6c6572206973206e6f74206f776e6572206e6f7220617070726f76656460448201526064016104fb565b6106398282610d99565b5050565b600060016007546105d39190611a01565b610659335b82610d1b565b6106755760405162461bcd60e51b81526004016104fb90611a14565b61059c838383610e2c565b6000805b6007548110156106f657600081815260096020526040902054831480156106d857508380519060200120600860008381526020019081526020016000206040516106ce9190611a61565b6040518091039020145b156106e45790506103c8565b806106ee816119e8565b915050610684565b5060405162461bcd60e51b815260206004820152601a60248201527f50726f66696c653a2070726f66696c65206e6f7420666f756e6400000000000060448201526064016104fb565b61059c838383604051806020016040528060008152506109fe565b60008060006107676105a1565b9050600061077582866108aa565b336000908152600b6020526040812054919250036107a057336000908152600b602052604090208290555b9094909350915050565b6000818152600260205260408120546001600160a01b0316806103c85760405162461bcd60e51b8152602060048201526018602482015277115490cdcc8c4e881a5b9d985b1a59081d1bdad95b88125160421b60448201526064016104fb565b60006001600160a01b0382166108745760405162461bcd60e51b815260206004820152602960248201527f4552433732313a2061646472657373207a65726f206973206e6f7420612076616044820152683634b21037bbb732b960b91b60648201526084016104fb565b506001600160a01b031660009081526003602052604090205490565b6060600180546103dd90611998565b610639338383610f9d565b60006108b63384610d1b565b6108d25760405162461bcd60e51b81526004016104fb90611ad7565b60008251116109235760405162461bcd60e51b815260206004820152601f60248201527f50726f66696c653a2068616e646c652063616e6e6f7420626520656d7074790060448201526064016104fb565b6010825111156109755760405162461bcd60e51b815260206004820152601b60248201527f50726f66696c653a2068616e646c6520697320746f6f206c6f6e67000000000060448201526064016104fb565b600a826040516109859190611b20565b90815260405190819003602001902080549060006109a2836119e8565b91905055506000600a836040516109b99190611b20565b9081526040805160209281900383019020546000878152600890935291209091506109e48482611b8a565b506000848152600960205260409020819055905092915050565b610a07336105dd565b610a235760405162461bcd60e51b81526004016104fb90611a14565b610a2f8484848461106b565b50505050565b6060610a4082610c31565b60008281526006602052604081208054610a5990611998565b80601f0160208091040260200160405190810160405280929190818152602001828054610a8590611998565b8015610ad25780601f10610aa757610100808354040283529160200191610ad2565b820191906000526020600020905b815481529060010190602001808311610ab557829003601f168201915b505050505090506000610af060408051602081019091526000815290565b90508051600003610b02575092915050565b815115610b34578082604051602001610b1c929190611c4a565b60405160208183030381529060405292505050919050565b610b3d8461109e565b949350505050565b6000818152600860209081526040808320600990925282205481546060939291908290610b7190611998565b80601f0160208091040260200160405190810160405280929190818152602001828054610b9d90611998565b8015610bea5780601f10610bbf57610100808354040283529160200191610bea565b820191906000526020600020905b815481529060010190602001808311610bcd57829003601f168201915b5050505050915091509150915091565b610c0333610653565b610c1f5760405162461bcd60e51b81526004016104fb90611ad7565b336000908152600b6020526040902055565b6000818152600260205260409020546001600160a01b0316610c905760405162461bcd60e51b8152602060048201526018602482015277115490cdcc8c4e881a5b9d985b1a59081d1bdad95b88125160421b60448201526064016104fb565b50565b600081815260046020526040902080546001600160a01b0319166001600160a01b0384169081179091558190610cc8826107aa565b6001600160a01b03167f8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b92560405160405180910390a45050565b610639828260405180602001604052806000815250611112565b600080610d27836107aa565b9050806001600160a01b0316846001600160a01b03161480610d6e57506001600160a01b0380821660009081526005602090815260408083209388168352929052205460ff165b80610b3d5750836001600160a01b0316610d8784610460565b6001600160a01b031614949350505050565b6000828152600260205260409020546001600160a01b0316610e145760405162461bcd60e51b815260206004820152602e60248201527f45524337323155524953746f726167653a2055524920736574206f66206e6f6e60448201526d32bc34b9ba32b73a103a37b5b2b760911b60648201526084016104fb565b600082815260066020526040902061059c8282611b8a565b826001600160a01b0316610e3f826107aa565b6001600160a01b031614610e655760405162461bcd60e51b81526004016104fb90611c79565b6001600160a01b038216610ec75760405162461bcd60e51b8152602060048201526024808201527f4552433732313a207472616e7366657220746f20746865207a65726f206164646044820152637265737360e01b60648201526084016104fb565b610ed48383836001611145565b826001600160a01b0316610ee7826107aa565b6001600160a01b031614610f0d5760405162461bcd60e51b81526004016104fb90611c79565b600081815260046020908152604080832080546001600160a01b03199081169091556001600160a01b0387811680865260038552838620805460001901905590871680865283862080546001019055868652600290945282852080549092168417909155905184937fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef91a4505050565b816001600160a01b0316836001600160a01b031603610ffe5760405162461bcd60e51b815260206004820152601960248201527f4552433732313a20617070726f766520746f2063616c6c65720000000000000060448201526064016104fb565b6001600160a01b03838116600081815260056020908152604080832094871680845294825291829020805460ff191686151590811790915591519182527f17307eab39ab6107e8899845ad3d59bd9653f200f220920489ca2b5937696c31910160405180910390a3505050565b611076848484610e2c565b611082848484846111cd565b610a2f5760405162461bcd60e51b81526004016104fb90611cbe565b60606110a982610c31565b60006110c060408051602081019091526000815290565b905060008151116110e0576040518060200160405280600081525061110b565b806110ea846112ce565b6040516020016110fb929190611c4a565b6040516020818303038152906040525b9392505050565b61111c8383611361565b61112960008484846111cd565b61059c5760405162461bcd60e51b81526004016104fb90611cbe565b6001811115610a2f576001600160a01b0384161561118b576001600160a01b03841660009081526003602052604081208054839290611185908490611a01565b90915550505b6001600160a01b03831615610a2f576001600160a01b038316600090815260036020526040812080548392906111c2908490611d10565b909155505050505050565b60006001600160a01b0384163b156112c357604051630a85bd0160e11b81526001600160a01b0385169063150b7a0290611211903390899088908890600401611d23565b6020604051808303816000875af192505050801561124c575060408051601f3d908101601f1916820190925261124991810190611d60565b60015b6112a9573d80801561127a576040519150601f19603f3d011682016040523d82523d6000602084013e61127f565b606091505b5080516000036112a15760405162461bcd60e51b81526004016104fb90611cbe565b805181602001fd5b6001600160e01b031916630a85bd0160e11b149050610b3d565b506001949350505050565b606060006112db836114fa565b600101905060008167ffffffffffffffff8111156112fb576112fb6116c7565b6040519080825280601f01601f191660200182016040528015611325576020820181803683370190505b5090508181016020015b600019016f181899199a1a9b1b9c1cb0b131b232b360811b600a86061a8153600a850494508461132f57509392505050565b6001600160a01b0382166113b75760405162461bcd60e51b815260206004820181905260248201527f4552433732313a206d696e7420746f20746865207a65726f206164647265737360448201526064016104fb565b6000818152600260205260409020546001600160a01b03161561141c5760405162461bcd60e51b815260206004820152601c60248201527f4552433732313a20746f6b656e20616c7265616479206d696e7465640000000060448201526064016104fb565b61142a600083836001611145565b6000818152600260205260409020546001600160a01b03161561148f5760405162461bcd60e51b815260206004820152601c60248201527f4552433732313a20746f6b656e20616c7265616479206d696e7465640000000060448201526064016104fb565b6001600160a01b038216600081815260036020908152604080832080546001019055848352600290915280822080546001600160a01b0319168417905551839291907fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef908290a45050565b60008072184f03e93ff9f4daa797ed6e38ed64bf6a1f0160401b83106115395772184f03e93ff9f4daa797ed6e38ed64bf6a1f0160401b830492506040015b6d04ee2d6d415b85acef81000000008310611565576d04ee2d6d415b85acef8100000000830492506020015b662386f26fc10000831061158357662386f26fc10000830492506010015b6305f5e100831061159b576305f5e100830492506008015b61271083106115af57612710830492506004015b606483106115c1576064830492506002015b600a83106103c85760010192915050565b6001600160e01b031981168114610c9057600080fd5b6000602082840312156115fa57600080fd5b813561110b816115d2565b60005b83811015611620578181015183820152602001611608565b50506000910152565b60008151808452611641816020860160208601611605565b601f01601f19169290920160200192915050565b60208152600061110b6020830184611629565b60006020828403121561167a57600080fd5b5035919050565b80356001600160a01b038116811461169857600080fd5b919050565b600080604083850312156116b057600080fd5b6116b983611681565b946020939093013593505050565b634e487b7160e01b600052604160045260246000fd5b600067ffffffffffffffff808411156116f8576116f86116c7565b604051601f8501601f19908116603f01168101908282118183101715611720576117206116c7565b8160405280935085815286868601111561173957600080fd5b858560208301376000602087830101525050509392505050565b600082601f83011261176457600080fd5b61110b838335602085016116dd565b6000806040838503121561178657600080fd5b82359150602083013567ffffffffffffffff8111156117a457600080fd5b6117b085828601611753565b9150509250929050565b6000806000606084860312156117cf57600080fd5b6117d884611681565b92506117e660208501611681565b9150604084013590509250925092565b6000806040838503121561180957600080fd5b823567ffffffffffffffff81111561182057600080fd5b61182c85828601611753565b95602094909401359450505050565b60006020828403121561184d57600080fd5b813567ffffffffffffffff81111561186457600080fd5b610b3d84828501611753565b60006020828403121561188257600080fd5b61110b82611681565b6000806040838503121561189e57600080fd5b6118a783611681565b9150602083013580151581146118bc57600080fd5b809150509250929050565b600080600080608085870312156118dd57600080fd5b6118e685611681565b93506118f460208601611681565b925060408501359150606085013567ffffffffffffffff81111561191757600080fd5b8501601f8101871361192857600080fd5b611937878235602084016116dd565b91505092959194509250565b6000806040838503121561195657600080fd5b61195f83611681565b915061196d60208401611681565b90509250929050565b6040815260006119896040830185611629565b90508260208301529392505050565b600181811c908216806119ac57607f821691505b6020821081036119cc57634e487b7160e01b600052602260045260246000fd5b50919050565b634e487b7160e01b600052601160045260246000fd5b6000600182016119fa576119fa6119d2565b5060010190565b818103818111156103c8576103c86119d2565b6020808252602d908201527f4552433732313a2063616c6c6572206973206e6f7420746f6b656e206f776e6560408201526c1c881bdc88185c1c1c9bdd9959609a1b606082015260800190565b6000808354611a6f81611998565b60018281168015611a875760018114611a9c57611acb565b60ff1984168752821515830287019450611acb565b8760005260208060002060005b85811015611ac25781548a820152908401908201611aa9565b50505082870194505b50929695505050505050565b60208082526029908201527f50726f66696c653a2063616c6c6572206973206e6f74206f776e6572206e6f7260408201526808185c1c1c9bdd995960ba1b606082015260800190565b60008251611b32818460208701611605565b9190910192915050565b601f82111561059c57600081815260208120601f850160051c81016020861015611b635750805b601f850160051c820191505b81811015611b8257828155600101611b6f565b505050505050565b815167ffffffffffffffff811115611ba457611ba46116c7565b611bb881611bb28454611998565b84611b3c565b602080601f831160018114611bed5760008415611bd55750858301515b600019600386901b1c1916600185901b178555611b82565b600085815260208120601f198616915b82811015611c1c57888601518255948401946001909101908401611bfd565b5085821015611c3a5787850151600019600388901b60f8161c191681555b5050505050600190811b01905550565b60008351611c5c818460208801611605565b835190830190611c70818360208801611605565b01949350505050565b60208082526025908201527f4552433732313a207472616e736665722066726f6d20696e636f72726563742060408201526437bbb732b960d91b606082015260800190565b60208082526032908201527f4552433732313a207472616e7366657220746f206e6f6e20455243373231526560408201527131b2b4bb32b91034b6b83632b6b2b73a32b960711b606082015260800190565b808201808211156103c8576103c86119d2565b6001600160a01b0385811682528416602082015260408101839052608060608201819052600090611d5690830184611629565b9695505050505050565b600060208284031215611d7257600080fd5b815161110b816115d256fea2646970667358221220377b1b03b3a01d20716e6d7b44480c8154e641a424a3f980a41c9e95eb6c73a964736f6c63430008110033";

type ProfileConstructorParams =
  | [signer?: Signer]
  | ConstructorParameters<typeof ContractFactory>;

const isSuperArgs = (
  xs: ProfileConstructorParams
): xs is ConstructorParameters<typeof ContractFactory> => xs.length > 1;

export class Profile__factory extends ContractFactory {
  constructor(...args: ProfileConstructorParams) {
    if (isSuperArgs(args)) {
      super(...args);
    } else {
      super(_abi, _bytecode, args[0]);
    }
  }

  override deploy(
    overrides?: Overrides & { from?: PromiseOrValue<string> }
  ): Promise<Profile> {
    return super.deploy(overrides || {}) as Promise<Profile>;
  }
  override getDeployTransaction(
    overrides?: Overrides & { from?: PromiseOrValue<string> }
  ): TransactionRequest {
    return super.getDeployTransaction(overrides || {});
  }
  override attach(address: string): Profile {
    return super.attach(address) as Profile;
  }
  override connect(signer: Signer): Profile__factory {
    return super.connect(signer) as Profile__factory;
  }

  static readonly bytecode = _bytecode;
  static readonly abi = _abi;
  static createInterface(): ProfileInterface {
    return new utils.Interface(_abi) as ProfileInterface;
  }
  static connect(
    address: string,
    signerOrProvider: Signer | Provider
  ): Profile {
    return new Contract(address, _abi, signerOrProvider) as Profile;
  }
}
