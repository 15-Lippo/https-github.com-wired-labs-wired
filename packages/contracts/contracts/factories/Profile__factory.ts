/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */
import { Signer, utils, Contract, ContractFactory, Overrides } from "ethers";
import type { Provider, TransactionRequest } from "@ethersproject/providers";
import type { PromiseOrValue } from "../common";
import type { Profile, ProfileInterface } from "../Profile";

const _abi = [
  {
    inputs: [],
    stateMutability: "nonpayable",
    type: "constructor",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "owner",
        type: "address",
      },
      {
        indexed: true,
        internalType: "address",
        name: "approved",
        type: "address",
      },
      {
        indexed: true,
        internalType: "uint256",
        name: "tokenId",
        type: "uint256",
      },
    ],
    name: "Approval",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "owner",
        type: "address",
      },
      {
        indexed: true,
        internalType: "address",
        name: "operator",
        type: "address",
      },
      {
        indexed: false,
        internalType: "bool",
        name: "approved",
        type: "bool",
      },
    ],
    name: "ApprovalForAll",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "from",
        type: "address",
      },
      {
        indexed: true,
        internalType: "address",
        name: "to",
        type: "address",
      },
      {
        indexed: true,
        internalType: "uint256",
        name: "tokenId",
        type: "uint256",
      },
    ],
    name: "Transfer",
    type: "event",
  },
  {
    inputs: [],
    name: "MAX_HANDLE_LENGTH",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "to",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "tokenId",
        type: "uint256",
      },
    ],
    name: "approve",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "owner",
        type: "address",
      },
    ],
    name: "balanceOf",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "tokenId",
        type: "uint256",
      },
    ],
    name: "getApproved",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "tokenId",
        type: "uint256",
      },
    ],
    name: "getHandle",
    outputs: [
      {
        internalType: "string",
        name: "",
        type: "string",
      },
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "string",
        name: "handle",
        type: "string",
      },
      {
        internalType: "uint256",
        name: "handleId",
        type: "uint256",
      },
    ],
    name: "getProfileFromHandle",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "owner",
        type: "address",
      },
      {
        internalType: "address",
        name: "operator",
        type: "address",
      },
    ],
    name: "isApprovedForAll",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "to",
        type: "address",
      },
    ],
    name: "mint",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "name",
    outputs: [
      {
        internalType: "string",
        name: "",
        type: "string",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "tokenId",
        type: "uint256",
      },
    ],
    name: "ownerOf",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "from",
        type: "address",
      },
      {
        internalType: "address",
        name: "to",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "tokenId",
        type: "uint256",
      },
    ],
    name: "safeTransferFrom",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "from",
        type: "address",
      },
      {
        internalType: "address",
        name: "to",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "tokenId",
        type: "uint256",
      },
      {
        internalType: "bytes",
        name: "data",
        type: "bytes",
      },
    ],
    name: "safeTransferFrom",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "operator",
        type: "address",
      },
      {
        internalType: "bool",
        name: "approved",
        type: "bool",
      },
    ],
    name: "setApprovalForAll",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "tokenId",
        type: "uint256",
      },
      {
        internalType: "string",
        name: "newHandle",
        type: "string",
      },
    ],
    name: "setHandle",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "tokenId",
        type: "uint256",
      },
      {
        internalType: "string",
        name: "tokenURI",
        type: "string",
      },
    ],
    name: "setTokenURI",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "bytes4",
        name: "interfaceId",
        type: "bytes4",
      },
    ],
    name: "supportsInterface",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "symbol",
    outputs: [
      {
        internalType: "string",
        name: "",
        type: "string",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "tokenId",
        type: "uint256",
      },
    ],
    name: "tokenURI",
    outputs: [
      {
        internalType: "string",
        name: "",
        type: "string",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "totalSupply",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "from",
        type: "address",
      },
      {
        internalType: "address",
        name: "to",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "tokenId",
        type: "uint256",
      },
    ],
    name: "transferFrom",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
];

const _bytecode =
  "0x608060405260016007553480156200001657600080fd5b506040518060400160405280600781526020016650726f66696c6560c81b8152506040518060400160405280600781526020016650524f46494c4560c81b815250818181600090816200006a919062000129565b50600162000079828262000129565b5050505050620001f5565b634e487b7160e01b600052604160045260246000fd5b600181811c90821680620000af57607f821691505b602082108103620000d057634e487b7160e01b600052602260045260246000fd5b50919050565b601f8211156200012457600081815260208120601f850160051c81016020861015620000ff5750805b601f850160051c820191505b8181101562000120578281556001016200010b565b5050505b505050565b81516001600160401b0381111562000145576200014562000084565b6200015d816200015684546200009a565b84620000d6565b602080601f8311600181146200019557600084156200017c5750858301515b600019600386901b1c1916600185901b17855562000120565b600085815260208120601f198616915b82811015620001c657888601518255948401946001909101908401620001a5565b5085821015620001e55787850151600019600388901b60f8161c191681555b5050505050600190811b01905550565b611c3480620002056000396000f3fe608060405234801561001057600080fd5b506004361061012c5760003560e01c80636a627842116100ad578063a6e6178d11610071578063a6e6178d1461026c578063b88d4fde1461027f578063c87b56dd14610292578063e985e9c5146102a5578063ec81d194146102e157600080fd5b80636a627842146102235780636f78ce0b1461023657806370a082311461023e57806395d89b4114610251578063a22cb4651461025957600080fd5b806318160ddd116100f457806318160ddd146101c157806323b872dd146101d7578063335b1603146101ea57806342842e0e146101fd5780636352211e1461021057600080fd5b806301ffc9a71461013157806306fdde0314610159578063081812fc1461016e578063095ea7b314610199578063162094c4146101ae575b600080fd5b61014461013f3660046114e7565b610302565b60405190151581526020015b60405180910390f35b610161610354565b6040516101509190611554565b61018161017c366004611567565b6103e6565b6040516001600160a01b039091168152602001610150565b6101ac6101a736600461159c565b61040d565b005b6101ac6101bc366004611672565b610527565b6101c961058c565b604051908152602001610150565b6101ac6101e53660046116b9565b6105a2565b6101c96101f83660046116f5565b6105d3565b6101ac61020b3660046116b9565b610653565b61018161021e366004611567565b61066e565b6101c961023136600461173a565b6106ce565b6101c9601081565b6101c961024c36600461173a565b610700565b610161610786565b6101ac610267366004611755565b610795565b6101c961027a366004611672565b6107a0565b6101ac61028d366004611791565b610934565b6101616102a0366004611567565b61096b565b6101446102b336600461180d565b6001600160a01b03918216600090815260056020908152604080832093909416825291909152205460ff1690565b6102f46102ef366004611567565b610a7b565b604051610150929190611840565b60006001600160e01b031982166380ac58cd60e01b148061033357506001600160e01b03198216635b5e139f60e01b145b8061034e57506301ffc9a760e01b6001600160e01b03198316145b92915050565b60606000805461036390611862565b80601f016020809104026020016040519081016040528092919081815260200182805461038f90611862565b80156103dc5780601f106103b1576101008083540402835291602001916103dc565b820191906000526020600020905b8154815290600101906020018083116103bf57829003601f168201915b5050505050905090565b60006103f182610b30565b506000908152600460205260409020546001600160a01b031690565b60006104188261066e565b9050806001600160a01b0316836001600160a01b03160361048a5760405162461bcd60e51b815260206004820152602160248201527f4552433732313a20617070726f76616c20746f2063757272656e74206f776e656044820152603960f91b60648201526084015b60405180910390fd5b336001600160a01b03821614806104a657506104a681336102b3565b6105185760405162461bcd60e51b815260206004820152603d60248201527f4552433732313a20617070726f76652063616c6c6572206973206e6f7420746f60448201527f6b656e206f776e6572206f7220617070726f76656420666f7220616c6c0000006064820152608401610481565b6105228383610b92565b505050565b610532335b83610c00565b61057e5760405162461bcd60e51b815260206004820181905260248201527f43616c6c6572206973206e6f74206f776e6572206e6f7220617070726f7665646044820152606401610481565b6105888282610c7e565b5050565b6000600160075461059d91906118b2565b905090565b6105ac3382610c00565b6105c85760405162461bcd60e51b8152600401610481906118c5565b610522838383610d11565b6000805b600754811015610649576000818152600960205260409020548314801561062b57508380519060200120600860008381526020019081526020016000206040516106219190611912565b6040518091039020145b1561063757905061034e565b8061064181611988565b9150506105d7565b5060009392505050565b61052283838360405180602001604052806000815250610934565b6000818152600260205260408120546001600160a01b03168061034e5760405162461bcd60e51b8152602060048201526018602482015277115490cdcc8c4e881a5b9d985b1a59081d1bdad95b88125160421b6044820152606401610481565b60006106dc82600754610e82565b600780549060006106ec83611988565b9190505550600160075461034e91906118b2565b60006001600160a01b03821661076a5760405162461bcd60e51b815260206004820152602960248201527f4552433732313a2061646472657373207a65726f206973206e6f7420612076616044820152683634b21037bbb732b960b91b6064820152608401610481565b506001600160a01b031660009081526003602052604090205490565b60606001805461036390611862565b610588338383610e9c565b60006107ac3384610c00565b61080a5760405162461bcd60e51b815260206004820152602960248201527f50726f66696c653a2063616c6c6572206973206e6f74206f776e6572206e6f7260448201526808185c1c1c9bdd995960ba1b6064820152608401610481565b600082511161085b5760405162461bcd60e51b815260206004820152601f60248201527f50726f66696c653a2068616e646c652063616e6e6f7420626520656d707479006044820152606401610481565b6010825111156108ad5760405162461bcd60e51b815260206004820152601b60248201527f50726f66696c653a2068616e646c6520697320746f6f206c6f6e6700000000006044820152606401610481565b6000600a836040516108bf91906119a1565b9081526020016040518091039020549050600a836040516108e091906119a1565b90815260405190819003602001902080549060006108fd83611988565b9091555050600084815260086020526040902061091a8482611a0b565b506000848152600960205260409020819055905092915050565b61093d3361052c565b6109595760405162461bcd60e51b8152600401610481906118c5565b61096584848484610f6a565b50505050565b606061097682610b30565b6000828152600660205260408120805461098f90611862565b80601f01602080910402602001604051908101604052809291908181526020018280546109bb90611862565b8015610a085780601f106109dd57610100808354040283529160200191610a08565b820191906000526020600020905b8154815290600101906020018083116109eb57829003601f168201915b505050505090506000610a2660408051602081019091526000815290565b90508051600003610a38575092915050565b815115610a6a578082604051602001610a52929190611acb565b60405160208183030381529060405292505050919050565b610a7384610f9d565b949350505050565b6000818152600860209081526040808320600990925282205481546060939291908290610aa790611862565b80601f0160208091040260200160405190810160405280929190818152602001828054610ad390611862565b8015610b205780601f10610af557610100808354040283529160200191610b20565b820191906000526020600020905b815481529060010190602001808311610b0357829003601f168201915b5050505050915091509150915091565b6000818152600260205260409020546001600160a01b0316610b8f5760405162461bcd60e51b8152602060048201526018602482015277115490cdcc8c4e881a5b9d985b1a59081d1bdad95b88125160421b6044820152606401610481565b50565b600081815260046020526040902080546001600160a01b0319166001600160a01b0384169081179091558190610bc78261066e565b6001600160a01b03167f8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b92560405160405180910390a45050565b600080610c0c8361066e565b9050806001600160a01b0316846001600160a01b03161480610c5357506001600160a01b0380821660009081526005602090815260408083209388168352929052205460ff165b80610a735750836001600160a01b0316610c6c846103e6565b6001600160a01b031614949350505050565b6000828152600260205260409020546001600160a01b0316610cf95760405162461bcd60e51b815260206004820152602e60248201527f45524337323155524953746f726167653a2055524920736574206f66206e6f6e60448201526d32bc34b9ba32b73a103a37b5b2b760911b6064820152608401610481565b60008281526006602052604090206105228282611a0b565b826001600160a01b0316610d248261066e565b6001600160a01b031614610d4a5760405162461bcd60e51b815260040161048190611afa565b6001600160a01b038216610dac5760405162461bcd60e51b8152602060048201526024808201527f4552433732313a207472616e7366657220746f20746865207a65726f206164646044820152637265737360e01b6064820152608401610481565b610db98383836001611011565b826001600160a01b0316610dcc8261066e565b6001600160a01b031614610df25760405162461bcd60e51b815260040161048190611afa565b600081815260046020908152604080832080546001600160a01b03199081169091556001600160a01b0387811680865260038552838620805460001901905590871680865283862080546001019055868652600290945282852080549092168417909155905184937fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef91a4505050565b610588828260405180602001604052806000815250611099565b816001600160a01b0316836001600160a01b031603610efd5760405162461bcd60e51b815260206004820152601960248201527f4552433732313a20617070726f766520746f2063616c6c6572000000000000006044820152606401610481565b6001600160a01b03838116600081815260056020908152604080832094871680845294825291829020805460ff191686151590811790915591519182527f17307eab39ab6107e8899845ad3d59bd9653f200f220920489ca2b5937696c31910160405180910390a3505050565b610f75848484610d11565b610f81848484846110cc565b6109655760405162461bcd60e51b815260040161048190611b3f565b6060610fa882610b30565b6000610fbf60408051602081019091526000815290565b90506000815111610fdf576040518060200160405280600081525061100a565b80610fe9846111cd565b604051602001610ffa929190611acb565b6040516020818303038152906040525b9392505050565b6001811115610965576001600160a01b03841615611057576001600160a01b038416600090815260036020526040812080548392906110519084906118b2565b90915550505b6001600160a01b03831615610965576001600160a01b0383166000908152600360205260408120805483929061108e908490611b91565b909155505050505050565b6110a38383611260565b6110b060008484846110cc565b6105225760405162461bcd60e51b815260040161048190611b3f565b60006001600160a01b0384163b156111c257604051630a85bd0160e11b81526001600160a01b0385169063150b7a0290611110903390899088908890600401611ba4565b6020604051808303816000875af192505050801561114b575060408051601f3d908101601f1916820190925261114891810190611be1565b60015b6111a8573d808015611179576040519150601f19603f3d011682016040523d82523d6000602084013e61117e565b606091505b5080516000036111a05760405162461bcd60e51b815260040161048190611b3f565b805181602001fd5b6001600160e01b031916630a85bd0160e11b149050610a73565b506001949350505050565b606060006111da836113f9565b600101905060008167ffffffffffffffff8111156111fa576111fa6115c6565b6040519080825280601f01601f191660200182016040528015611224576020820181803683370190505b5090508181016020015b600019016f181899199a1a9b1b9c1cb0b131b232b360811b600a86061a8153600a850494508461122e57509392505050565b6001600160a01b0382166112b65760405162461bcd60e51b815260206004820181905260248201527f4552433732313a206d696e7420746f20746865207a65726f20616464726573736044820152606401610481565b6000818152600260205260409020546001600160a01b03161561131b5760405162461bcd60e51b815260206004820152601c60248201527f4552433732313a20746f6b656e20616c7265616479206d696e746564000000006044820152606401610481565b611329600083836001611011565b6000818152600260205260409020546001600160a01b03161561138e5760405162461bcd60e51b815260206004820152601c60248201527f4552433732313a20746f6b656e20616c7265616479206d696e746564000000006044820152606401610481565b6001600160a01b038216600081815260036020908152604080832080546001019055848352600290915280822080546001600160a01b0319168417905551839291907fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef908290a45050565b60008072184f03e93ff9f4daa797ed6e38ed64bf6a1f0160401b83106114385772184f03e93ff9f4daa797ed6e38ed64bf6a1f0160401b830492506040015b6d04ee2d6d415b85acef81000000008310611464576d04ee2d6d415b85acef8100000000830492506020015b662386f26fc10000831061148257662386f26fc10000830492506010015b6305f5e100831061149a576305f5e100830492506008015b61271083106114ae57612710830492506004015b606483106114c0576064830492506002015b600a831061034e5760010192915050565b6001600160e01b031981168114610b8f57600080fd5b6000602082840312156114f957600080fd5b813561100a816114d1565b60005b8381101561151f578181015183820152602001611507565b50506000910152565b60008151808452611540816020860160208601611504565b601f01601f19169290920160200192915050565b60208152600061100a6020830184611528565b60006020828403121561157957600080fd5b5035919050565b80356001600160a01b038116811461159757600080fd5b919050565b600080604083850312156115af57600080fd5b6115b883611580565b946020939093013593505050565b634e487b7160e01b600052604160045260246000fd5b600067ffffffffffffffff808411156115f7576115f76115c6565b604051601f8501601f19908116603f0116810190828211818310171561161f5761161f6115c6565b8160405280935085815286868601111561163857600080fd5b858560208301376000602087830101525050509392505050565b600082601f83011261166357600080fd5b61100a838335602085016115dc565b6000806040838503121561168557600080fd5b82359150602083013567ffffffffffffffff8111156116a357600080fd5b6116af85828601611652565b9150509250929050565b6000806000606084860312156116ce57600080fd5b6116d784611580565b92506116e560208501611580565b9150604084013590509250925092565b6000806040838503121561170857600080fd5b823567ffffffffffffffff81111561171f57600080fd5b61172b85828601611652565b95602094909401359450505050565b60006020828403121561174c57600080fd5b61100a82611580565b6000806040838503121561176857600080fd5b61177183611580565b91506020830135801515811461178657600080fd5b809150509250929050565b600080600080608085870312156117a757600080fd5b6117b085611580565b93506117be60208601611580565b925060408501359150606085013567ffffffffffffffff8111156117e157600080fd5b8501601f810187136117f257600080fd5b611801878235602084016115dc565b91505092959194509250565b6000806040838503121561182057600080fd5b61182983611580565b915061183760208401611580565b90509250929050565b6040815260006118536040830185611528565b90508260208301529392505050565b600181811c9082168061187657607f821691505b60208210810361189657634e487b7160e01b600052602260045260246000fd5b50919050565b634e487b7160e01b600052601160045260246000fd5b8181038181111561034e5761034e61189c565b6020808252602d908201527f4552433732313a2063616c6c6572206973206e6f7420746f6b656e206f776e6560408201526c1c881bdc88185c1c1c9bdd9959609a1b606082015260800190565b600080835461192081611862565b60018281168015611938576001811461194d5761197c565b60ff198416875282151583028701945061197c565b8760005260208060002060005b858110156119735781548a82015290840190820161195a565b50505082870194505b50929695505050505050565b60006001820161199a5761199a61189c565b5060010190565b600082516119b3818460208701611504565b9190910192915050565b601f82111561052257600081815260208120601f850160051c810160208610156119e45750805b601f850160051c820191505b81811015611a03578281556001016119f0565b505050505050565b815167ffffffffffffffff811115611a2557611a256115c6565b611a3981611a338454611862565b846119bd565b602080601f831160018114611a6e5760008415611a565750858301515b600019600386901b1c1916600185901b178555611a03565b600085815260208120601f198616915b82811015611a9d57888601518255948401946001909101908401611a7e565b5085821015611abb5787850151600019600388901b60f8161c191681555b5050505050600190811b01905550565b60008351611add818460208801611504565b835190830190611af1818360208801611504565b01949350505050565b60208082526025908201527f4552433732313a207472616e736665722066726f6d20696e636f72726563742060408201526437bbb732b960d91b606082015260800190565b60208082526032908201527f4552433732313a207472616e7366657220746f206e6f6e20455243373231526560408201527131b2b4bb32b91034b6b83632b6b2b73a32b960711b606082015260800190565b8082018082111561034e5761034e61189c565b6001600160a01b0385811682528416602082015260408101839052608060608201819052600090611bd790830184611528565b9695505050505050565b600060208284031215611bf357600080fd5b815161100a816114d156fea264697066735822122094e3ad9f45cf9f942f061dc4c666bd2f7917fe14ca6ac26a8899429d8552c30a64736f6c63430008110033";

type ProfileConstructorParams =
  | [signer?: Signer]
  | ConstructorParameters<typeof ContractFactory>;

const isSuperArgs = (
  xs: ProfileConstructorParams
): xs is ConstructorParameters<typeof ContractFactory> => xs.length > 1;

export class Profile__factory extends ContractFactory {
  constructor(...args: ProfileConstructorParams) {
    if (isSuperArgs(args)) {
      super(...args);
    } else {
      super(_abi, _bytecode, args[0]);
    }
  }

  override deploy(
    overrides?: Overrides & { from?: PromiseOrValue<string> }
  ): Promise<Profile> {
    return super.deploy(overrides || {}) as Promise<Profile>;
  }
  override getDeployTransaction(
    overrides?: Overrides & { from?: PromiseOrValue<string> }
  ): TransactionRequest {
    return super.getDeployTransaction(overrides || {});
  }
  override attach(address: string): Profile {
    return super.attach(address) as Profile;
  }
  override connect(signer: Signer): Profile__factory {
    return super.connect(signer) as Profile__factory;
  }

  static readonly bytecode = _bytecode;
  static readonly abi = _abi;
  static createInterface(): ProfileInterface {
    return new utils.Interface(_abi) as ProfileInterface;
  }
  static connect(
    address: string,
    signerOrProvider: Signer | Provider
  ): Profile {
    return new Contract(address, _abi, signerOrProvider) as Profile;
  }
}
